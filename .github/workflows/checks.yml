name: run-checks

on:
  workflow_run:
    workflows: [ "fix-styling" ]
    types:
      - completed

jobs:
  static-analysis:
    name: static-analysis
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ] #, windows-latest
        php: [ 8.0 ]
        laravel: [ 8.* ]
        stability: [ prefer-lowest ] #, prefer-stable
        include:
          - laravel: 8.*
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          tools: composer:v2
          coverage: false

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer Dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update --dev
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Psalm
        run: ./vendor/bin/psalm --output-format=github

      - name: PHPStan
        run: ./vendor/bin/phpstan

      - name: PHP MessDetector
        run: ./vendor/bin/phpmd src github phpmd-ruleset.xml.dist

      - name: PHP Code Sniffer
        run: ./vendor/bin/phpcs

  tests:
    needs: [ 'static-analysis' ]
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ] # windows-latest
        php: [ 8.0 ]
        laravel: [ 8.* ]
        stability: [ prefer-lowest, prefer-stable ]
        include:
          - laravel: 8.*

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          tools: composer:v2
          coverage: true

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer Dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update --dev
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Setup Problem Matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Execute Tests (Ubuntu) + Coverage
        if: matrix.os == 'ubuntu-latest'
        run: vendor/bin/pest --parallel --coverage-clover="build/clover.xml"
        env:
          RUNNING_IN_CI: true

      - name: Execute Tests (Windows)
        if: matrix.os == 'windows-latest'
        run: vendor/bin/pest --parallel
        env:
          RUNNING_IN_CI: true

      - name: Upload Coverage
        if: github.ref == 'refs/heads/main' && matrix.php == '8.0' && matrix.laravel == '8.*' && matrix.os == 'ubuntu-latest' && matrix.stability == 'prefer-stable'
        uses: codacy/codacy-coverage-reporter-action@v1.2
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: build/clover.xml

      - name: Upload coverage to Codecov
        if: github.ref == 'refs/heads/main' && matrix.php == '8.0' && matrix.laravel == '8.*' && matrix.os == 'ubuntu-latest' && matrix.stability == 'prefer-stable'
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./build/
